fit12 <- update(fit1 , mpg~ am + carb)
anova(fit1, fit2, fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12)
fit1 <- lm(mpg~ amf,data = mtcars)
fit2 <- update(fit1 , mpg~ am + cyl)
fit2 <- update(fit1 , mpg~ am + disp)
fit3 <- update(fit1 , mpg~ am + disp)
fit4 <- update(fit1 , mpg~ am + hp)
fit5 <- update(fit1 , mpg~ am + drat)
fit6 <- update(fit1 , mpg~ am + wt)
fit7 <- update(fit1 , mpg~ am + qsec)
fit8 <- update(fit1 , mpg~ am + vs)
fit9 <- update(fit1 , mpg~ am + gear)
fit10 <- update(fit1 , mpg~ am + carb)
anova(fit1, fit2, fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10)
fit1 <- lm(mpg~ amf,data = mtcars)
fit2 <- update(fit1 , mpg~ am + cyl)
fit3 <- update(fit2 , mpg~ am + disp)
fit4 <- update(fit3 , mpg~ am + hp)
fit5 <- update(fit4 , mpg~ am + drat)
fit6 <- update(fit5 , mpg~ am + wt)
fit7 <- update(fit6 , mpg~ am + qsec)
fit8 <- update(fit7 , mpg~ am + vs)
fit9 <- update(fit8 , mpg~ am + gear)
fit10 <- update(fit9 , mpg~ am + carb)
anova(fit1, fit2, fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10)
fit1 <- lm(mpg~ amf,data = mtcars)
fit2 <- lm(mpg~ am + cyl, data =  mtcars)
fit3 <- lm(mpg~ am + disp, data = mtcars)
anova(fit1, fit2,fit3)
fit1 <- lm(mpg~ amf,data = mtcars)
fit2 <- update(fit1 , mpg~ am + cyl)
fit3 <- update(fit2 , mpg~ am + cyl + disp)
fit4 <- update(fit3 , mpg~ am + cyl + disp + hp)
fit5 <- update(fit4 , mpg~ am + cyl + disp + hp + drat)
fit6 <- update(fit5 , mpg~ am + cyl + disp + hp + drat + wt)
fit7 <- update(fit6 , mpg~ am + cyl + disp + hp + drat + wt + qsec)
fit8 <- update(fit7 , mpg~ am + cyl + disp + hp + drat + wt + qsec + vs)
fit9 <- update(fit8 , mpg~ am + cyl + disp + hp + drat + wt + qsec + vs + gear)
fit10 <- update(fit9 , mpg~ .)
anova(fit1, fit2, fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10)
fit1 <- lm(mpg~ amf,data = mtcars)
fit2 <- update(fit1 , mpg~ am + cyl)
fit3 <- update(fit2 , mpg~ am + cyl + disp)
fit4 <- update(fit3 , mpg~ am + cyl + disp + hp)
fit5 <- update(fit4 , mpg~ am + cyl + disp + hp + drat)
fit6 <- update(fit5 , mpg~ am + cyl + disp + hp + drat + wt)
fit7 <- update(fit6 , mpg~ am + cyl + disp + hp + drat + wt + qsec)
fit8 <- update(fit7 , mpg~ am + cyl + disp + hp + drat + wt + qsec + vs)
fit9 <- update(fit8 , mpg~ am + cyl + disp + hp + drat + wt + qsec + vs + gear)
fit10 <- update(fit9 ,mpg~ am + cyl + disp + hp + drat + wt + qsec + vs + gear + carb)
anova(fit1, fit2, fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10)
fit21 <- update(fit1 , mpg~ am + cyl)
fit22 <- update(fit21, mpg ~ am + cyl + hp)
fit23 <- update(fit21, mpg ~ am + cyl + hp + wt)
anova(fit21,fit22,fit23)
fit21 <- update(fit1 , mpg~ am + cyl)
fit22 <- update(fit21, mpg ~ am + cyl + wt)
fit23 <- update(fit21, mpg ~ am + cyl + hp + wt)
anova(fit21,fit22,fit23)
fit21 <- update(fit1 , mpg~ am + cyl)
fit22 <- update(fit21, mpg ~ am + cyl + wt)
fit23 <- update(fit21, mpg ~ am + cyl + wt + hp)
anova(fit1, fit21,fit22,fit23)
summary(fit21)$coef
summary(fit22)$coef
round(summary(fit22)$coef,4)
round(summary(fit21)$coef,4)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
fit21 <- update(fit1 , mpg~ am + cylf)
fit22 <- update(fit21, mpg ~ am + cylf + wt)
fit23 <- update(fit21, mpg ~ am + cylf + wt + hp)
anova(fit1, fit21,fit22,fit23)
round(summary(fit22)$coef,4)
round(summary(fit21)$coef,4)
plot(fit21)
ggplot(fit21)
?mfrow
par(mfrow = c(2,2))
plot(fit21)
tinytex::install_tinytex()
install.packages("shiny")
shiny::runApp('F:/R Workspace/Developing Data Product/TestApp')
galton
min(galton$child)
max(galton$child)
shiny::runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
?lines
runApp('F:/R Workspace/Developing Data Product/TestApp')
runApp('F:/R Workspace/Developing Data Product/TestApp')
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
plot(M)
head
head(Fruits)
library(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
M
plot(M)
?googleVis
demo(googleVis)
plot(M)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
?gvisMotionChart
G <- gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",options=list(width=600, height=400))
plot(G)
install.packages("googleVis")
install.packages("googleVis")
plot(M)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
library(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
G <- gvisGeoChart(Exports, "Country", "Profit",options=list(width=200, height=100))
T1 <- gvisTable(Exports,options=list(width=200, height=270))
M <- gvisMotionChart(Fruits, "Fruit", "Year", options=list(width=400, height=370))
GT <- gvisMerge(G,T1, horizontal=FALSE)
GTM <- gvisMerge(GT, M, horizontal=TRUE,tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
plot(GTM)
?dgamma
getMethod(dgamma)
getS3Method(dgamma)
install.packages("plotly")
covid
load("D:/Games/R Workspace/COVID 19/ENV.RData")
covid.backup
covid
covid19
covid <- covid19 %>% group_by(countriesAndTerritories,geoId) %>% summarize("total.cases" = sum(cases))
library(dplyr)
covid <- covid19 %>% group_by(countriesAndTerritories,geoId) %>% summarize("total.cases" = sum(cases))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
covid <- as.data.frame(covid)
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
covid
View(covid19)
View(covid19)
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
covid
fig <- plot_ly(covid, type='choropleth', locations=covid$geoId, z=covid$total.cases, text=df$COUNTRY, colorscale="Blues")
library(plotly)
fig <- plot_ly(covid, type='choropleth', locations=covid$geoId, z=covid$total.cases, text=df$COUNTRY, colorscale="Blues")
fig
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
df
fig <- plot_ly(df, type='choropleth', locations=df$CODE, z=df$GDP..BILLIONS., text=df$COUNTRY, colorscale="Blues")
fig
View(covid.backup)
View(covid.backup)
n <- nrow(covid)
counter <- 1
covid$code[counter] <- 0
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- countries[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
covid
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- countries[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
covid
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- countries[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- vector()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- countries[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
n <- nrow(covid)
counter <- 1
code <- vector()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
df[grep("India",df$COUNTRY),]$CODE
code <- vector()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- vector()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- vector()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
df[grep("cc",df$COUNTRY),]$CODE
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
df$CODE
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- vector(mode = character())
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
df[grep("cc",df$COUNTRY),]$CODE
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
n <- nrow(covid)
counter <- 1
code <- vector(mode = character())
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep("cc",df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
cc <- covid$countriesAndTerritories[1]
cc
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
cc
code[1]
df[grep(cc,df$COUNTRY),]$CODE
code <- list()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- df[grep(cc,df$COUNTRY),]$CODE
}
counter <- counter + 1
}
code
code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
code
counter <- 1
code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
code
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
covid$code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
covid
is.na(covid)
sum(is.na(covid))
covid2 <- data.frame(covid, na.rm = TRUe)
covid2 <- data.frame(covid, na.rm = TRUE)
sum(is.na(covid2))
?na.action
?na.action
covid2 <- na.omit(covid)
covid2
sum(is.na(covid2))
fig <- plot_ly(covid, type='choropleth', locations=covid$code, z=covid$total.cases, text=covid$countriesAndTerritories, colorscale="Blues")
fig
View(df)
View(df)
tail(covid)
tail(covid, 20)
covid[201,]$code == "USA"
covid[201,]$code = "USA"
fig <- plot_ly(covid, type='choropleth', locations=covid$code, z=covid$total.cases, text=covid$countriesAndTerritories, colorscale="Blues")
fig
fig <- plot_ly(covid, type='choropleth', locations=covid$code, z=covid$total.cases, text=covid$countriesAndTerritories, colorscale="Blues")
fig <- fig %>% layout(
title = 'Total COVID 19 Cases around the world till 26/06/2020<br>(Hover for breakdown)'
)
fig
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
covid$geoId <- gsub("JPG11668" , "JP" , covid$geoId)
covid$geoId <- gsub("UK" , "GB" , covid$geoId)
n <- nrow(covid)
counter <- 1
covid$code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
covid[201,]$code = "USA"
covid <- na.omit(covid)
fig <- plot_ly(covid, type='choropleth', locations=covid$code, z=covid$total.cases, text=covid$countriesAndTerritories, colorscale="Blues")
fig <- fig %>% layout(
title = 'Total COVID 19 Cases around the world till 26/06/2020<br>(Hover for breakdown)'
)
fig
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(plotly)
covid19 <- read.csv("D:/Games/R Workspace/COVID 19/covid19.csv")
head(covid19)
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
n <- nrow(covid)
counter <- 1
covid$code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
covid[201,]$code = "USA"
covid <- na.omit(covid)
covid <- covid19 %>% group_by(countriesAndTerritories,geoId,popData2019) %>% summarize("total.cases" = sum(cases))
covid <- as.data.frame(covid)
##Cleaning the data
covid$countriesAndTerritories <- gsub("_", " ", covid$countriesAndTerritories)
covid$countriesAndTerritories <- gsub("Cases on an international conveyance Japan", "Japan", covid$countriesAndTerritories)
n <- nrow(covid)
counter <- 1
covid$code <- c()
while(counter <= n){
cc <- covid$countriesAndTerritories[counter]
if(cc %in% df$COUNTRY){
covid$code[counter] <- as.character(df[grep(cc,df$COUNTRY),]$CODE)
}
counter <- counter + 1
}
covid[201,]$code = "USA"
covid <- na.omit(covid)
View(covid)
View(covid)
View(covid)
getwd()
setwd("D:/Games/R Workspace/COVID 19")
write.csv(covid)
write.csv(covid,"covid.csv")
